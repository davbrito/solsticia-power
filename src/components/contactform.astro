---
import Button from "./ui/button.astro";
---

<form action="#" method="POST" id="form" class="needs-validation" novalidate>
  <div class="mb-5">
    <input
      type="text"
      placeholder="Nombre y Apellido"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="name"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Por favor ingrese su nombre completo.
    </div>
  </div>
  <div class="mb-5">
    <label for="email_address" class="sr-only"
      >Dirección de correo electrónico</label
    ><input
      id="email_address"
      type="email"
      placeholder="Dirección de correo electrónico"
      name="email"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Por favor ingrese su dirección de correo electrónico.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Por favor ingrese una dirección de correo electrónico válida.
    </div>
  </div>
  <div class="mb-3">
    <textarea
      name="message"
      required
      placeholder="Mensaje"
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none h-36 focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    ></textarea>
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Por favor ingrese su mensaje.
    </div>
  </div>
  <Button type="submit" size="lg" block>Enviar</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    result.innerHTML = "Enviando...";

    setTimeout(() => {
      result.classList.add("text-green-500");
      result.innerHTML = "Mensaje enviado con éxito!";
      form.reset();
      form.classList.remove("was-validated");
      setTimeout(() => {
        result.style.display = "none";
      }, 5000);
    }, 2000);

    // fetch("https://api.web3forms.com/submit", {
    //   method: "POST",
    //   headers: {
    //     "Content-Type": "application/json",
    //     Accept: "application/json",
    //   },
    //   body: json,
    // })
    //   .then(async (response) => {
    //     let json = await response.json();
    //     if (response.status == 200) {
    //       result.classList.add("text-green-500");
    //       result.innerHTML = json.message;
    //     } else {
    //       console.log(response);
    //       result.classList.add("text-red-500");
    //       result.innerHTML = json.message;
    //     }
    //   })
    //   .catch((error) => {
    //     console.log(error);
    //     result.innerHTML = "Something went wrong!";
    //   })
    //   .then(function () {
    //     form.reset();
    //     form.classList.remove("was-validated");
    //     setTimeout(() => {
    //       result.style.display = "none";
    //     }, 5000);
    //   });
  });
</script>
